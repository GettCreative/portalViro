__d(function (global, _require, module, exports, _dependencyMap) {
  'use strict';

  var _jsxFileName = "/home/nooreddein/Desktop/ViroSample/node_modules/react-viro/components/ViroCamera.js";

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _reactNative = _require(_dependencyMap[0], "react-native");

  var _react = _require(_dependencyMap[1], "react");

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = _require(_dependencyMap[2], "prop-types");

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var createReactClass = _require(_dependencyMap[3], 'create-react-class');

  var ViroCamera = createReactClass({
    displayName: "ViroCamera",
    propTypes: _extends({}, _reactNative.View.propTypes, {
      position: _propTypes2.default.arrayOf(_propTypes2.default.number),
      rotation: _propTypes2.default.arrayOf(_propTypes2.default.number),
      active: _propTypes2.default.bool.isRequired,
      animation: _propTypes2.default.shape({
        name: _propTypes2.default.string,
        delay: _propTypes2.default.number,
        loop: _propTypes2.default.bool,
        onStart: _propTypes2.default.func,
        onFinish: _propTypes2.default.func,
        run: _propTypes2.default.bool,
        interruptible: _propTypes2.default.bool
      }),
      fieldOfView: _propTypes2.default.number
    }),
    componentDidMount: function componentDidMount() {
      this.context.cameraDidMount(this);
    },
    componentWillUnmount: function componentWillUnmount() {
      this.context.cameraWillUnmount(this);
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
      this.context.cameraWillReceiveProps(this, nextProps);
    },
    setNativeProps: function setNativeProps(nativeProps) {
      this._component.setNativeProps(nativeProps);
    },
    _onAnimationStart: function _onAnimationStart(event) {
      this.props.animation && this.props.animation.onStart && this.props.animation.onStart();
    },
    _onAnimationFinish: function _onAnimationFinish(event) {
      this.props.animation && this.props.animation.onFinish && this.props.animation.onFinish();
    },
    render: function render() {
      var _this = this;

      return _react2.default.createElement(VRTCamera, _extends({
        ref: function ref(component) {
          _this._component = component;
        }
      }, this.props, {
        onAnimationStartViro: this._onAnimationStart,
        onAnimationFinishViro: this._onAnimationFinish,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63
        }
      }));
    }
  });
  ViroCamera.contextTypes = {
    cameraDidMount: _propTypes2.default.func,
    cameraWillUnmount: _propTypes2.default.func,
    cameraWillReceiveProps: _propTypes2.default.func
  };
  var VRTCamera = (0, _reactNative.requireNativeComponent)('VRTCamera', ViroCamera, {
    nativeOnly: {
      scale: [1, 1, 1],
      materials: [],
      visible: true,
      canHover: true,
      canClick: true,
      canTouch: true,
      canScroll: true,
      canSwipe: true,
      canDrag: true,
      canPinch: true,
      canRotate: true,
      onPinchViro: true,
      onRotateViro: true,
      onHoverViro: true,
      onClickViro: true,
      onTouchViro: true,
      onScrollViro: true,
      onSwipeViro: true,
      onDragViro: true,
      transformBehaviors: true,
      canFuse: true,
      onFuseViro: true,
      timeToFuse: true,
      viroTag: true,
      scalePivot: true,
      rotationPivot: true,
      canCollide: true,
      onCollisionViro: true,
      onNativeTransformDelegateViro: true,
      hasTransformDelegate: true,
      physicsBody: true,
      dragType: true,
      onAnimationStartViro: true,
      onAnimationFinishViro: true,
      ignoreEventHandling: true
    }
  });
  module.exports = ViroCamera;
});